package bj;

import java.io.BufferedReader;
import java.io.InputStreamReader;

// 밖 --> 안
// 배열만들기1_16926 과 동일한 문제이나 제한 조건이 강화됨
// 반시계 방향으로 R 번 회전할 때 각 회전마다 제 자리도 돌아오는 회전수가 존재하므로, % 연산자를 이용하여 회전수를 줄인다.
//  - 상,하,좌,우 좌표가 결정되면 5x5 제 자리로 돌아오는 이동 회수는 (5-1)x2 + (4-1)x2 가 된다.
//  * * * *
//  *     *
//  *     *
//  *     *
//  * * * *
public class BJ_배열돌리기2_16927 {

	static int N, M, R;
	static int[][] map;
	
	public static void main(String[] args) throws Exception{
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] read = br.readLine().split(" ");
		
		N = Integer.parseInt(read[0]);
		M = Integer.parseInt(read[1]);
		R = Integer.parseInt(read[2]);
		
		map = new int[N][M];
		for (int i = 0; i < N; i++) {
			String[] line = br.readLine().split(" ");
			for (int j = 0; j < M; j++) {
				map[i][j] = Integer.parseInt(line[j]);
			}
		}

		// R 번만큼 돌리는 for 문 제거
		// rotate 안에서 R 을 보정해서 회전
		rotate();
		
		// 출력
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M-1; j++) {
				System.out.print(map[i][j] + " ");
			}
			System.out.println(map[i][M-1]);
		}
	}

	// while 문안에서 밖->안으로 좁혀가면서 이동
	// 각 단계별로 R 대신 제 자리로 돌아오는 부분 제외하고 처리
	static void rotate() {
		
		// 시작은  map 의 가장 자리부터
		int sy = 0, ey = N-1;
		int sx = 0, ex = M-1;
		
		while(true) {
			// 기저 조건
			if( ey - sy < 1 || ex - sx < 1 ) return;
			
			// 제자리로 돌아오는 부분은 제외
			int count = R % ((ey-sy)*2 + (ex-sx)*2);
			
			for (int r = 0; r < count; r++) {

				int temp = map[sy][sx];
				
				// Top 행  좌 이동
				for (int i = sx; i < ex; i++) {
					map[sy][i] = map[sy][i+1];
				}
				
				// Right 열 상 이동
				for (int i = sy; i < ey; i++) {
					map[i][ex] = map[i+1][ex];
				}
				
				// Bottom 행 우 이동
				for (int i = ex; i > sx; i--) {
					map[ey][i] = map[ey][i-1];
				}
				
				// Left 열 하 이동
				for (int i = ey; i > sy; i--) {
					map[i][sx] = map[i-1][sx];
				}
				
				// temp
				map[sy+1][sx] = temp;

			}
			
			// 안쪽으로 한 단계 좁힌다.
			sy += 1; // 시작 y는 하나 아래로
			sx += 1; // 시작 x는 하나 오른쪽으로
			ey -= 1; // 종료 y는 하나 위
			ex -= 1; // 종료 x는 하나 왼쪽으로
		}
	}
}
