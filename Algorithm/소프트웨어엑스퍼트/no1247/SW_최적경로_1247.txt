package sw;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class SW_최적경로_1247 {
	static int T, N, comY, comX, homeY, homeX, min;
	static int[][] customer;
	static int[] tgt;
	static boolean[] select;
	
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		T = Integer.parseInt(br.readLine());
		
		for (int t = 1; t <= T; t++) {
			
			// 초기화
			min = Integer.MAX_VALUE;			
			N = Integer.parseInt(br.readLine());
			customer = new int[N][2];
			select = new boolean[N];
			tgt = new int[N];
			
			StringTokenizer st = new StringTokenizer(br.readLine());
			comY = Integer.parseInt(st.nextToken());
			comX = Integer.parseInt(st.nextToken());
			homeY = Integer.parseInt(st.nextToken());
			homeX = Integer.parseInt(st.nextToken());
			
			for (int i = 0; i < N; i++) {
				customer[i][0] = Integer.parseInt(st.nextToken());
				customer[i][1] = Integer.parseInt(st.nextToken());
			}
			
			//
			perm(0, 0);
			
			System.out.println("#" + t + " " + min);
		}
	}
	
	static void perm(int tgtIdx, int sum) {
		
		//if( sum > min ) return; // 가지치기 후처리
		
		// 기저
		if( tgtIdx == N ) {
			
			// complete code
			// 고객 마지막 - 집
			sum += distance(
					homeY, homeX,
					customer[ tgt[N-1] ][0],
					customer[ tgt[N-1] ][1]
					);
			
			min = Math.min(min, sum);
			
			return;
		}
		
		for (int i = 0; i < N; i++) {
			if( select[i] ) continue;
			
			select[i] = true;
			
			tgt[tgtIdx] = i;
			
			int dis = 0;
			if( tgtIdx == 0 ) { // 회사 - 첫번째 고객
				dis = distance(
						comY, comX,
						customer[ tgt[0] ][0],
						customer[ tgt[0] ][1]
						);
			}else { // 고객 - 고개
				dis = distance(
						customer[ tgt[tgtIdx-1] ][0],
						customer[ tgt[tgtIdx-1] ][1],
						customer[ tgt[tgtIdx] ][0],
						customer[ tgt[tgtIdx] ][1]
						);
			}
			
			// 가지치기 선처리
			if( sum + dis < min ) {
				perm(tgtIdx + 1, sum + dis);
			};

			select[i] = false;
		}
	}
	
	
	static int distance(int y1, int x1, int y2, int x2) {
		return Math.abs(y1-y2) + Math.abs(x1-x2);
	}
}







